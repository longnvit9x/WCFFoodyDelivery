//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FoodDeliveryEntities : DbContext
    {
        public FoodDeliveryEntities()
            : base("name=FoodDeliveryEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<FileData> FileDatas { get; set; }
        public virtual DbSet<Food> Foods { get; set; }
        public virtual DbSet<FoodSize> FoodSizes { get; set; }
        public virtual DbSet<FoodType> FoodTypes { get; set; }
        public virtual DbSet<Invoice> Invoices { get; set; }
        public virtual DbSet<InvoiceDetail> InvoiceDetails { get; set; }
        public virtual DbSet<PostImage> PostImages { get; set; }
        public virtual DbSet<Post> Posts { get; set; }
        public virtual DbSet<Store> Stores { get; set; }
        public virtual DbSet<StoreImage> StoreImages { get; set; }
        public virtual DbSet<StoreSale> StoreSales { get; set; }
        public virtual DbSet<StoreType> StoreTypes { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual ObjectResult<CHECK_LOGIN_Result> CHECK_LOGIN(string userName, string passWord, string userType)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passWordParameter = passWord != null ?
                new ObjectParameter("PassWord", passWord) :
                new ObjectParameter("PassWord", typeof(string));
    
            var userTypeParameter = userType != null ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CHECK_LOGIN_Result>("CHECK_LOGIN", userNameParameter, passWordParameter, userTypeParameter);
        }
    
        public virtual ObjectResult<CHECK_USER_LOGIN_Result> CHECK_USER_LOGIN(string userName, string userType)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var userTypeParameter = userType != null ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CHECK_USER_LOGIN_Result>("CHECK_USER_LOGIN", userNameParameter, userTypeParameter);
        }
    
        public virtual ObjectResult<FIND_STORE_Result> FIND_STORE(string storeName, string address, string storeType)
        {
            var storeNameParameter = storeName != null ?
                new ObjectParameter("StoreName", storeName) :
                new ObjectParameter("StoreName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var storeTypeParameter = storeType != null ?
                new ObjectParameter("StoreType", storeType) :
                new ObjectParameter("StoreType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FIND_STORE_Result>("FIND_STORE", storeNameParameter, addressParameter, storeTypeParameter);
        }
    
        public virtual ObjectResult<GET_LIST_CATEGORY_BY_STOREID_Result> GET_LIST_CATEGORY_BY_STOREID(string storeID)
        {
            var storeIDParameter = storeID != null ?
                new ObjectParameter("StoreID", storeID) :
                new ObjectParameter("StoreID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_LIST_CATEGORY_BY_STOREID_Result>("GET_LIST_CATEGORY_BY_STOREID", storeIDParameter);
        }
    
        public virtual ObjectResult<GET_LIST_FOOD_BY_CATEGORYID_Result> GET_LIST_FOOD_BY_CATEGORYID(string categoryID)
        {
            var categoryIDParameter = categoryID != null ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_LIST_FOOD_BY_CATEGORYID_Result>("GET_LIST_FOOD_BY_CATEGORYID", categoryIDParameter);
        }
    
        public virtual ObjectResult<GET_LIST_FOOD_BY_STOREID_Result> GET_LIST_FOOD_BY_STOREID(string storeID)
        {
            var storeIDParameter = storeID != null ?
                new ObjectParameter("StoreID", storeID) :
                new ObjectParameter("StoreID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_LIST_FOOD_BY_STOREID_Result>("GET_LIST_FOOD_BY_STOREID", storeIDParameter);
        }
    
        public virtual ObjectResult<GET_LIST_FOODSIZE_BY_FOODID_Result> GET_LIST_FOODSIZE_BY_FOODID(string foodID)
        {
            var foodIDParameter = foodID != null ?
                new ObjectParameter("FoodID", foodID) :
                new ObjectParameter("FoodID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_LIST_FOODSIZE_BY_FOODID_Result>("GET_LIST_FOODSIZE_BY_FOODID", foodIDParameter);
        }
    
        public virtual ObjectResult<GET_LIST_FOODTYPE_BY_FOODID_Result> GET_LIST_FOODTYPE_BY_FOODID(string foodID)
        {
            var foodIDParameter = foodID != null ?
                new ObjectParameter("FoodID", foodID) :
                new ObjectParameter("FoodID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_LIST_FOODTYPE_BY_FOODID_Result>("GET_LIST_FOODTYPE_BY_FOODID", foodIDParameter);
        }
    
        public virtual ObjectResult<GET_LIST_INVOICE_BY_CUSTOMERID_Result> GET_LIST_INVOICE_BY_CUSTOMERID(string customerID)
        {
            var customerIDParameter = customerID != null ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_LIST_INVOICE_BY_CUSTOMERID_Result>("GET_LIST_INVOICE_BY_CUSTOMERID", customerIDParameter);
        }
    
        public virtual ObjectResult<GET_LIST_INVOICE_BY_CUSTOMERID_ALL_Result> GET_LIST_INVOICE_BY_CUSTOMERID_ALL(string customerID)
        {
            var customerIDParameter = customerID != null ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_LIST_INVOICE_BY_CUSTOMERID_ALL_Result>("GET_LIST_INVOICE_BY_CUSTOMERID_ALL", customerIDParameter);
        }
    
        public virtual ObjectResult<GET_LIST_INVOICE_BY_STOREID_Result> GET_LIST_INVOICE_BY_STOREID(string storeID)
        {
            var storeIDParameter = storeID != null ?
                new ObjectParameter("StoreID", storeID) :
                new ObjectParameter("StoreID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_LIST_INVOICE_BY_STOREID_Result>("GET_LIST_INVOICE_BY_STOREID", storeIDParameter);
        }
    
        public virtual ObjectResult<GET_LIST_INVOICEDETAIL_BY_INVOICEID_Result> GET_LIST_INVOICEDETAIL_BY_INVOICEID(string invoiceID)
        {
            var invoiceIDParameter = invoiceID != null ?
                new ObjectParameter("InvoiceID", invoiceID) :
                new ObjectParameter("InvoiceID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_LIST_INVOICEDETAIL_BY_INVOICEID_Result>("GET_LIST_INVOICEDETAIL_BY_INVOICEID", invoiceIDParameter);
        }
    
        public virtual ObjectResult<GET_LIST_STORE_Result> GET_LIST_STORE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_LIST_STORE_Result>("GET_LIST_STORE");
        }
    
        public virtual ObjectResult<GET_LIST_STOREIMAGE_BY_STOREID_Result> GET_LIST_STOREIMAGE_BY_STOREID(string storeID)
        {
            var storeIDParameter = storeID != null ?
                new ObjectParameter("StoreID", storeID) :
                new ObjectParameter("StoreID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_LIST_STOREIMAGE_BY_STOREID_Result>("GET_LIST_STOREIMAGE_BY_STOREID", storeIDParameter);
        }
    
        public virtual ObjectResult<GET_OBJECT_CUSTOMER_BY_CUSTOMERID_Result> GET_OBJECT_CUSTOMER_BY_CUSTOMERID(string customerID)
        {
            var customerIDParameter = customerID != null ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_OBJECT_CUSTOMER_BY_CUSTOMERID_Result>("GET_OBJECT_CUSTOMER_BY_CUSTOMERID", customerIDParameter);
        }
    
        public virtual ObjectResult<GET_OBJECT_CUSTOMER_BY_USERNAME_Result> GET_OBJECT_CUSTOMER_BY_USERNAME(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_OBJECT_CUSTOMER_BY_USERNAME_Result>("GET_OBJECT_CUSTOMER_BY_USERNAME", userNameParameter);
        }
    
        public virtual ObjectResult<GET_OBJECT_FOOD_BY_FOODID_Result> GET_OBJECT_FOOD_BY_FOODID(string foodID)
        {
            var foodIDParameter = foodID != null ?
                new ObjectParameter("FoodID", foodID) :
                new ObjectParameter("FoodID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_OBJECT_FOOD_BY_FOODID_Result>("GET_OBJECT_FOOD_BY_FOODID", foodIDParameter);
        }
    
        public virtual ObjectResult<GET_OBJECT_INVOICE_BY_INVOICEID_Result> GET_OBJECT_INVOICE_BY_INVOICEID(string invoiceID)
        {
            var invoiceIDParameter = invoiceID != null ?
                new ObjectParameter("InvoiceID", invoiceID) :
                new ObjectParameter("InvoiceID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_OBJECT_INVOICE_BY_INVOICEID_Result>("GET_OBJECT_INVOICE_BY_INVOICEID", invoiceIDParameter);
        }
    
        public virtual ObjectResult<GET_OBJECT_INVOICE_BY_STOREID_AND_CUSTOMERID_Result> GET_OBJECT_INVOICE_BY_STOREID_AND_CUSTOMERID(string storeID, string customerID)
        {
            var storeIDParameter = storeID != null ?
                new ObjectParameter("StoreID", storeID) :
                new ObjectParameter("StoreID", typeof(string));
    
            var customerIDParameter = customerID != null ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_OBJECT_INVOICE_BY_STOREID_AND_CUSTOMERID_Result>("GET_OBJECT_INVOICE_BY_STOREID_AND_CUSTOMERID", storeIDParameter, customerIDParameter);
        }
    
        public virtual ObjectResult<GET_OBJECT_INVOICE_BY_STOREID_AND_CUSTOMERID_AND_ORDERDATE_Result> GET_OBJECT_INVOICE_BY_STOREID_AND_CUSTOMERID_AND_ORDERDATE(string storeID, string customerID, string orderDate)
        {
            var storeIDParameter = storeID != null ?
                new ObjectParameter("StoreID", storeID) :
                new ObjectParameter("StoreID", typeof(string));
    
            var customerIDParameter = customerID != null ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(string));
    
            var orderDateParameter = orderDate != null ?
                new ObjectParameter("OrderDate", orderDate) :
                new ObjectParameter("OrderDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_OBJECT_INVOICE_BY_STOREID_AND_CUSTOMERID_AND_ORDERDATE_Result>("GET_OBJECT_INVOICE_BY_STOREID_AND_CUSTOMERID_AND_ORDERDATE", storeIDParameter, customerIDParameter, orderDateParameter);
        }
    
        public virtual ObjectResult<GET_OBJECT_STORE_BY_STOREID_Result> GET_OBJECT_STORE_BY_STOREID(string storeID)
        {
            var storeIDParameter = storeID != null ?
                new ObjectParameter("StoreID", storeID) :
                new ObjectParameter("StoreID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_OBJECT_STORE_BY_STOREID_Result>("GET_OBJECT_STORE_BY_STOREID", storeIDParameter);
        }
    
        public virtual ObjectResult<GET_OBJECT_STORESALE_BY_STOREID_Result> GET_OBJECT_STORESALE_BY_STOREID(string storeID)
        {
            var storeIDParameter = storeID != null ?
                new ObjectParameter("StoreID", storeID) :
                new ObjectParameter("StoreID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_OBJECT_STORESALE_BY_STOREID_Result>("GET_OBJECT_STORESALE_BY_STOREID", storeIDParameter);
        }
    
        public virtual ObjectResult<GET_SALE_OPEN_Result> GET_SALE_OPEN()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_SALE_OPEN_Result>("GET_SALE_OPEN");
        }
    
        public virtual int INSERT_CUSTOMER_TOSQL(string fullName, string address, string mobile, string userName, string password, string email, string avatar, string userType)
        {
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var avatarParameter = avatar != null ?
                new ObjectParameter("Avatar", avatar) :
                new ObjectParameter("Avatar", typeof(string));
    
            var userTypeParameter = userType != null ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_CUSTOMER_TOSQL", fullNameParameter, addressParameter, mobileParameter, userNameParameter, passwordParameter, emailParameter, avatarParameter, userTypeParameter);
        }
    
        public virtual int INSERT_INVOICE_TOSQL(string orderDate, string deliveryDate, Nullable<decimal> sale, Nullable<decimal> serviceChange, Nullable<decimal> shippingFee, Nullable<decimal> totalPrice, Nullable<int> status, string customerName, string customerPhone, string addressDelivery, string customerID, string storeID)
        {
            var orderDateParameter = orderDate != null ?
                new ObjectParameter("OrderDate", orderDate) :
                new ObjectParameter("OrderDate", typeof(string));
    
            var deliveryDateParameter = deliveryDate != null ?
                new ObjectParameter("DeliveryDate", deliveryDate) :
                new ObjectParameter("DeliveryDate", typeof(string));
    
            var saleParameter = sale.HasValue ?
                new ObjectParameter("Sale", sale) :
                new ObjectParameter("Sale", typeof(decimal));
    
            var serviceChangeParameter = serviceChange.HasValue ?
                new ObjectParameter("ServiceChange", serviceChange) :
                new ObjectParameter("ServiceChange", typeof(decimal));
    
            var shippingFeeParameter = shippingFee.HasValue ?
                new ObjectParameter("ShippingFee", shippingFee) :
                new ObjectParameter("ShippingFee", typeof(decimal));
    
            var totalPriceParameter = totalPrice.HasValue ?
                new ObjectParameter("TotalPrice", totalPrice) :
                new ObjectParameter("TotalPrice", typeof(decimal));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            var customerPhoneParameter = customerPhone != null ?
                new ObjectParameter("CustomerPhone", customerPhone) :
                new ObjectParameter("CustomerPhone", typeof(string));
    
            var addressDeliveryParameter = addressDelivery != null ?
                new ObjectParameter("AddressDelivery", addressDelivery) :
                new ObjectParameter("AddressDelivery", typeof(string));
    
            var customerIDParameter = customerID != null ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(string));
    
            var storeIDParameter = storeID != null ?
                new ObjectParameter("StoreID", storeID) :
                new ObjectParameter("StoreID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_INVOICE_TOSQL", orderDateParameter, deliveryDateParameter, saleParameter, serviceChangeParameter, shippingFeeParameter, totalPriceParameter, statusParameter, customerNameParameter, customerPhoneParameter, addressDeliveryParameter, customerIDParameter, storeIDParameter);
        }
    
        public virtual int INSERT_INVOICEDETAIL_TOSQL(string foodID, Nullable<int> numberFood, string size, Nullable<long> priceSize, string type, Nullable<long> priceType, string invoiceID)
        {
            var foodIDParameter = foodID != null ?
                new ObjectParameter("FoodID", foodID) :
                new ObjectParameter("FoodID", typeof(string));
    
            var numberFoodParameter = numberFood.HasValue ?
                new ObjectParameter("NumberFood", numberFood) :
                new ObjectParameter("NumberFood", typeof(int));
    
            var sizeParameter = size != null ?
                new ObjectParameter("Size", size) :
                new ObjectParameter("Size", typeof(string));
    
            var priceSizeParameter = priceSize.HasValue ?
                new ObjectParameter("PriceSize", priceSize) :
                new ObjectParameter("PriceSize", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var priceTypeParameter = priceType.HasValue ?
                new ObjectParameter("PriceType", priceType) :
                new ObjectParameter("PriceType", typeof(long));
    
            var invoiceIDParameter = invoiceID != null ?
                new ObjectParameter("InvoiceID", invoiceID) :
                new ObjectParameter("InvoiceID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_INVOICEDETAIL_TOSQL", foodIDParameter, numberFoodParameter, sizeParameter, priceSizeParameter, typeParameter, priceTypeParameter, invoiceIDParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int UPDATE_CUSTOMER_TOSQL(string userName, string fullName, string address, string mobile, string userType, string password, string email, string avatar)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var userTypeParameter = userType != null ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var avatarParameter = avatar != null ?
                new ObjectParameter("Avatar", avatar) :
                new ObjectParameter("Avatar", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_CUSTOMER_TOSQL", userNameParameter, fullNameParameter, addressParameter, mobileParameter, userTypeParameter, passwordParameter, emailParameter, avatarParameter);
        }
    
        public virtual int UPDATE_STATUS_INVOICE(Nullable<int> status, string invoiceID)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var invoiceIDParameter = invoiceID != null ?
                new ObjectParameter("InvoiceID", invoiceID) :
                new ObjectParameter("InvoiceID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_STATUS_INVOICE", statusParameter, invoiceIDParameter);
        }
    }
}
